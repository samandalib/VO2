version: "3.8"

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: vo2max_postgres_staging
    restart: always
    environment:
      POSTGRES_DB: vo2max_staging
      POSTGRES_USER: staging_user
      POSTGRES_PASSWORD: staging_password
    ports:
      - "5433:5432" # Different port to avoid conflicts
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U staging_user -d vo2max_staging"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vo2max_app_staging
    restart: always
    env_file:
      - .env.staging
    environment:
      - DATABASE_URL=postgresql://staging_user:staging_password@postgres:5432/vo2max_staging
    ports:
      - "3001:3000" # Different port for staging
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy for staging
  nginx:
    image: nginx:alpine
    container_name: vo2max_nginx_staging
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/staging.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app

volumes:
  postgres_staging_data:

networks:
  default:
    name: vo2max_staging_network
